@page "/debtadd"
@using FinanceGuard.Models
@using FinanceGuard.Services
@inject ITransactionService TransactionService
@inject NavigationManager NavigationManager

<style>
    .container {
        display: flex;
        height: 100vh;
    }

    .menu {
        background-color: #2c3e50;
        color: white;
        width: 250px;
        display: flex;
        flex-direction: column;
        padding: 20px;
    }

        .menu a {
            color: white;
            text-decoration: none;
            font-size: 1rem;
            margin: 10px 0;
            padding: 10px;
            border-radius: 4px;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

            .menu a:hover {
                background-color: #34495e;
                color: #ecf0f1;
            }

            .menu a.active {
                background-color: #f39c12;
                font-weight: bold;
            }

    .content {
        flex: 1;
        background-color: #e8f5e9;
        padding: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .form-container {
        width: 100%;
        max-width: 600px;
        background-color: #f5f5f5;
        border-radius: 8px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
    }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            font-weight: bold;
            display: block;
            margin-bottom: 5px;
        }

        .form-group input, .form-group select, .form-group textarea {
            width: 100%;
            padding: 10px;
            font-size: 1rem;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

    .add-button {
        width: 100%;
        padding: 10px;
        background-color: #f39c12;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 1rem;
        cursor: pointer;
    }

        .add-button:hover {
            background-color: #d87c00;
        }

    .error-message {
        color: red;
        font-size: 0.9rem;
        margin-bottom: 10px;
    }
</style>

<div class="container">
    <!-- Navigation Menu -->
    <div class="menu">
        <a href="/dashboard">Dashboard</a>
        <a href="/inflow">Cash Inflow</a>
        <a href="/outflow">Cash Outflow</a>
        <a href="/debt" class="active">Debt</a>
    </div>

    <!-- Main Content -->
    <div class="content">
        <div class="form-container">
            <h2>Add Debt</h2>

            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="error-message">@ErrorMessage</div>
            }

            <form @onsubmit="HandleFormSubmit">
                <div class="form-group">
                    <label>Date</label>
                    <input type="date" @bind="Transaction.Date" required />
                </div>

                <div class="form-group">
                    <label>Amount</label>
                    <input type="number" @bind="Transaction.Amount" required />
                </div>

                <div class="form-group">
                    <label>Default Tags</label>
                    <select @onchange="SetDefaultTag">
                        <option value="">Select a tag</option>
                        <option value="Loan">Loan</option>
                        <option value="Credit Card">Credit Card</option>
                        
                    </select>
                </div>

                <div class="form-group">
                    <label>Custom Tags</label>
                    <input type="text" @bind="CustomTags" placeholder="Add custom tags (optional)" />
                </div>

                <div class="form-group">
                    <label>Notes</label>
                    <textarea @bind="Transaction.Notes" placeholder="Add notes (optional)"></textarea>
                </div>

                <button class="add-button" type="submit">Add Debt</button>
            </form>
        </div>
    </div>
</div>

@code {
    private Transaction Transaction { get; set; } = new Transaction
        {
            // Default values
            Type = "Debt",
            Date = DateTime.Now,
            Amount = 0,
            Tags = string.Empty,
            Notes = string.Empty,
            Status = "Pending"
        };

    private string CustomTags { get; set; } = string.Empty; // Holds custom tags
    private string ErrorMessage { get; set; } = string.Empty; // Holds error messages

    private void SetDefaultTag(ChangeEventArgs e)
    {
        if (e.Value is string selectedTag && !string.IsNullOrWhiteSpace(selectedTag))
        {
            Transaction.Tags = selectedTag; // Set the default tag
        }
    }

    private async Task HandleFormSubmit()
    {
        ErrorMessage = string.Empty;

        // Validate Amount
        if (Transaction.Amount <= 0)
        {
            ErrorMessage = "Amount must be greater than 0.";
            return;
        }

        // Combine default and custom tags
        if (!string.IsNullOrWhiteSpace(CustomTags))
        {
            Transaction.Tags = string.IsNullOrWhiteSpace(Transaction.Tags)
                ? CustomTags
                : $"{Transaction.Tags}, {CustomTags}";
        }

        try
        {
            await TransactionService.AddTransactionAsync(Transaction);
            NavigationManager.NavigateTo("/debt");
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error: {ex.Message}";
        }
    }
}
